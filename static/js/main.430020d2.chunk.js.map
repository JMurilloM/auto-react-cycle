{"version":3,"sources":["logo.svg","components/image.jsx","components/card.jsx","components/deck.jsx","App.js","index.js","registerServiceWorker.js"],"names":["module","exports","Image","this","props","url","height","width","children","style","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","React","PureComponent","defaultProps","Card","parseText","text","_","chain","split","map","line","flatten","value","title","subtext","color","backgroundColor","titleColor","titleBackgroundColor","textColor","textBackgroundColor","subtextColor","subtextBackgroundColor","borderColor","borderThickness","image","cutLines","titleAlign","textAlign","subtextAlign","flip","textIcon","subtextIcon","className","border","display","verticalAlign","position","top","left","fontWeight","padding","Deck","cards","card","theme","createMuiTheme","palette","type","units","defaultValue","App","state","thickness","unit","showCutLines","onChange","e","setState","target","onUnitChange","onWidthChange","onHeightChange","onThicknessChange","onToggleCutLines","componentDidMount","document","cardArray","isString","JSON","parse","inputJSX","label","background","margin","htmlFor","inputProps","name","id","control","checked","trigger","href","content","componentRef","imageJSX","fontSize","multiline","rowsMax","textDecoration","ref","el","ReactDOM","render","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error"],"mappings":"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","file":"static/js/main.430020d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nclass Image extends React.PureComponent {\r\n  render() {\r\n    var {\r\n      url,\r\n      height,\r\n      width,\r\n      children\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          width, height,\r\n          backgroundImage: `url(${url})`,\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundSize: 'contain',\r\n          backgroundPosition: 'center',\r\n        }}\r\n      >\r\n        {children}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  static defaultProps = {\r\n    width: '100%',\r\n    height: '100%',\r\n  }\r\n}\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport Image from \"./image.jsx\";\r\nimport _ from \"lodash\";\r\n\r\nclass Card extends React.PureComponent {\r\n  parseText = text => {\r\n    var x = _.chain(text)\r\n      .split(\"\\n\")\r\n      .map(line => {\r\n        return [line, <br />];\r\n      })\r\n      .flatten()\r\n      .value();\r\n\r\n    return x;\r\n  };\r\n\r\n  render() {\r\n    var {\r\n      title,\r\n      text,\r\n      subtext,\r\n      height,\r\n      width,\r\n      color,\r\n      backgroundColor,\r\n      titleColor,\r\n      titleBackgroundColor,\r\n      textColor,\r\n      textBackgroundColor,\r\n      subtextColor,\r\n      subtextBackgroundColor,\r\n      borderColor = \"white\",\r\n      borderThickness,\r\n      image,\r\n      cutLines,\r\n      titleAlign,\r\n      textAlign,\r\n      subtextAlign,\r\n      flip,\r\n      textIcon,\r\n      subtextIcon\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={flip && \"flip\"}\r\n        style={{\r\n          border: cutLines && \"dashed 1px black\",\r\n          display: \"inline-block\",\r\n          verticalAlign: \"top\",\r\n          height,\r\n          width\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            backgroundColor,\r\n            position: \"relative\"\r\n          }}\r\n        >\r\n          {image && <Image url={image} />}\r\n          <div\r\n            className=\"flex-middle flex-col justify-space-between \"\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              color,\r\n              border: `solid ${borderThickness} ${borderColor}`\r\n            }}\r\n          >\r\n            {title && (\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  fontWeight: \"bold\",\r\n                  color: titleColor,\r\n                  textAlign: titleAlign,\r\n                  backgroundColor: titleBackgroundColor\r\n                }}\r\n              >\r\n                <div style={{ padding: 3 }}>{this.parseText(title)}</div>\r\n              </div>\r\n            )}\r\n            {text && (\r\n              <div\r\n                className={textIcon && \"fas\"}\r\n                style={{\r\n                  width: \"100%\",\r\n                  color: textColor,\r\n                  textAlign: textAlign,\r\n                  backgroundColor: textBackgroundColor\r\n                }}\r\n              >\r\n                <div style={{ padding: 3 }}>{this.parseText(text)}</div>\r\n              </div>\r\n            )}\r\n            {subtext && (\r\n              <div\r\n                className={subtextIcon && \"fas\"}\r\n                style={{                  \r\n                  width: \"100%\",\r\n                  color: subtextColor,\r\n                  textAlign: subtextAlign,\r\n                  backgroundColor: subtextBackgroundColor\r\n                }}\r\n              >\r\n                <div style={{ padding: 3 }}>{this.parseText(subtext)}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport Card from './card.jsx';\r\n\r\nclass Deck extends React.PureComponent {\r\n  render() {\r\n    var {\r\n      borderThickness,\r\n      width,\r\n      height,\r\n      cutLines\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"\" style={{ padding: 10 }}>\r\n        {\r\n          _.map(this.props.cards, (card) => {\r\n            return (\r\n              <Card\r\n                borderThickness={borderThickness}\r\n                width={width}\r\n                height={height}\r\n                cutLines={cutLines}\r\n                {...card}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Deck;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./webfonts/css/all.css\"\n\nimport _ from \"lodash\";\nimport ReactToPrint from \"react-to-print\";\n\nimport Deck from \"./components/deck.jsx\";\nimport {\n  FormControl,\n  TextField,\n  MenuItem,\n  Select,\n  InputLabel,\n  FormControlLabel,\n  Switch\n} from \"@material-ui/core\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Image from \"./components/image.jsx\";\n\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nvar units = [\"in\", \"mm\", \"px\"];\n\nconst defaultValue = `[\n  {\n    \"title\": \"Carta plana\",\n    \"text\": \"Juega esta carta para realizar la accion mas generica del mundo!\",\n    \"subtext\": \"Colgar en la pared\"\n  },  {\n    \"title\": \"Zona\\\\nPeligrosa!\",\n    \"titleColor\": \"red\",\n    \"titleAlign\": \"right\",\n    \"titleBackgroundColor\": \"yellow\",\n    \"text\": \"Viaje directo a la zona peligrosa\",\n    \"textBackgroundColor\": \"rgba(255,255,255,.8)\",\n    \"textAlign\": \"center\",\n    \"subtext\": \"Carretera a la zona peligrosa\",\n    \"subtextColor\": \"white\",\n    \"subtextBackgroundColor\": \"rgba(0,0,0,.5)\",\n    \"backgroundColor\": \"red\",\n    \"borderColor\": \"black\"\n  },{\n    \"title\": \"Zona de riesgo!\",\n    \"titleColor\": \"red\",\n    \"titleBackgroundColor\": \"yellow\",\n    \"subtext\": \"Zona de riesgo!\",\n    \"subtextColor\": \"white\",\n    \"subtextBackgroundColor\": \"#ff0000\",\n    \"backgroundColor\": \"red\",\n    \"borderColor\": \"black\",\n    \"image\": \"https://www.byron.mx/images/icons/logo.png\"\n  }\n]`;\n\nclass App extends React.PureComponent {\n  state = {\n    thickness: 0.1,\n    width: 2.5,\n    height: 3.5,\n    unit: \"in\",\n    value: defaultValue,\n    showCutLines: true\n  };\n\n  onChange = e => {\n    this.setState({\n      value: e.target.value\n    });\n  };\n\n  onUnitChange = e => {\n    this.setState({\n      unit: e.target.value\n    });\n  };\n\n  onWidthChange = e => {\n    this.setState({\n      width: e.target.value\n    });\n  };\n\n  onHeightChange = e => {\n    this.setState({\n      height: e.target.value\n    });\n  };\n\n  onThicknessChange = e => {\n    this.setState({\n      thickness: e.target.value\n    });\n  };\n\n  onToggleCutLines = e => {\n    this.setState({\n      showCutLines: !this.state.showCutLines\n    });\n  };\n\n  componentDidMount = () => {\n    document.title = \"Proto-Deck Generator\";\n  };\n\n  render() {\n    var { value, width, height, unit, thickness, showCutLines } = this.state;\n\n    var cardArray = [];\n\n    if (_.isString(value)) {\n      try {\n        cardArray = JSON.parse(value);\n      } catch (e) {\n        cardArray = [];\n      }\n    }\n\n    var inputJSX = (\n      <div\n        className=\"flex-middle flex-wrap\"\n        style={{ backgroundColor: \"#EEE\", padding: 3 }}\n      >\n        <div style={{ padding: 3 }}>\n          <TextField\n            label=\"Ancho\"\n            value={width}\n            onChange={this.onWidthChange}\n            style={{ background: \"#fff\" }}\n            margin=\"normal\"\n          />\n        </div>\n        <div style={{ padding: 3 }}>\n          <TextField\n            label=\"Altura\"\n            value={height}\n            onChange={this.onHeightChange}\n            style={{ background: \"#fff\" }}\n            margin=\"normal\"\n          />\n        </div>\n        <div style={{ padding: \"3px\" }}>\n          <TextField\n            label=\"Grosor del borde\"\n            value={thickness}\n            onChange={this.onThicknessChange}\n            style={{ background: \"#fff\" }}\n            margin=\"normal\"\n          />\n        </div>\n        <div style={{ padding: 3 }}>\n          <FormControl margin=\"normal\" style={{ background: \"#fff\" }}>\n            <InputLabel htmlFor=\"name-error\">Unidad</InputLabel>\n            <Select\n              value={unit}\n              label=\"Unidad\"\n              onChange={this.onUnitChange}\n              inputProps={{\n                name: \"age\",\n                id: \"age-simple\"\n              }}\n            >\n              {_.map(units, unit => {\n                return <MenuItem value={unit}>{unit}</MenuItem>;\n              })}\n            </Select>\n          </FormControl>\n        </div>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={showCutLines}\n              onChange={this.onToggleCutLines}\n              value=\"checkedA\"\n            />\n          }\n          label=\"Lineas de corte\"\n        />\n\n        <div style={{ padding: 3 }}>\n          <ReactToPrint\n            trigger={() => <a href=\"#\">Imprimir</a>}\n            content={() => this.componentRef}\n          />\n        </div>\n      </div>\n    );\n\n    var imageJSX = (\n      <div\n        style={{\n          textAlign: \"center\",\n          fontSize: 20,\n          fontWeight: \"bold\",\n          padding: 3,\n          width: \"100%\",\n          padding: 15\n        }}\n      >\n          URL original <a target=\"_blank\" href=\"https://realadamsinger.github.io/board-game-deck-generator/\"> Aqui</a>!\n      </div>\n    );\n\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        <div\n          style={{\n            width: \"100%\",\n            textAlign: \"center\",\n            fontSize: 20\n          }}\n        >\n          <b>Generador de prototipos de deck!</b>\n          <br /><br />\n          Creado por{\" \"}\n          <a\n            href=\"https://boardgamegeek.com/user/adamsinger109\"\n            target=\"_blank\"\n          >\n            Adam Singer\n          </a>\n          <br />\n          Traducido por{\" \"}\n          <a\n            href=\"https://www.byron.mx/\"\n            target=\"_blank\"\n          >\n            Jorge Murillo\n          </a>\n          <br />\n          (No funciona en Internet Explorer, usa Chrome, Safari, o\n          Firefox)\n        </div>\n        <div\n          style={{\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n            width: \"60%\",\n            height: \"100%\",\n            padding: 15\n          }}\n        >\n          <MuiThemeProvider theme={theme}>\n            Prueba con este JSON de ejemplo, juega con los valores y observa el resultado! <br></br>\n            Leer instrucciones al lado <br></br>\n            Escribe \\n para hacer salto de linea.\n            <TextField\n              id=\"multiline-flexible\"\n              label=\"Enter a JSON Array\"\n              multiline\n              rowsMax=\"20\"\n              value={value}\n              onChange={this.onChange}\n              // margin=\"normal\"\n              style={{ backgroundColor: \"#222\", width: \"100%\" }}\n            />\n          </MuiThemeProvider>\n          {imageJSX}\n        </div>\n        <div\n          style={{\n            padding: 10,\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n            width: \"40%\"\n          }}\n        >\n          <a href=\"https://www.csvjson.com/csv2json\" target=\"_blank\">\n            Para utilizar excel\n            Click para convertir CSV a JSON{\" \"}\n          </a>\n          <br />\n          <br />\n          <b style={{ textDecoration: \"underline\" }}>\n            Atributos del JSON:\n          </b>{\" \"}\n          <br />\n          <b>title:</b> //Titulo de la carta\n          <br />\n          <b>titleAlign:</b> //Valores: center, left, right\n          <br />\n          <b>titleColor:</b> //Color del texto del titulo\n          <br />\n          <b>titleBackgroundColor:</b> //Color de fondo del titulo,\n          <br />\n          <br />\n          <b>text:</b> //middle text,\n          <br />\n          <b>textAlign:</b> // Alineado del texto, Valores: center, left, right,\n          <br />\n          <b>textColor:</b> //Color de texto de enmedio,\n          <br />\n          <b>textBackgroundColor:</b> //Color de fondo de texto de enmedio,\n          <br />\n          <br />\n          <b>subtext:</b> //Texto bajo,\n          <br />\n          <b>subtextAlign:</b> //Alineacion del texto bajo, Valores: center, left, right,\n          <br />\n          <b>subtextColor:</b> //Color de texto bajo,\n          <br />\n          <b>subtextBackgroundColor:</b> //Color de fondo de texto bajo,\n          <br />\n          <br />\n          <b>backgroundColor</b> //Color de fondo de la carta, <br />\n          <b>borderColor</b> //Color del borde de la carta\n          <br />\n          <b>image</b> //URL de la imagen\n          <br />\n        </div>\n        {inputJSX}\n\n        <div ref={el => (this.componentRef = el)}>\n          <Deck\n            borderThickness={thickness + unit}\n            height={height + unit}\n            width={width + unit}\n            cards={cardArray}\n            cutLines={showCutLines}\n          />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}